"0","  library(MASS)"
"0","  set.seed(10)"
"0","  n = 100"
"0","  p = 200"
"0","  "
"0","  # generate data"
"0","  V = matrix(0.3, p, p)"
"0","  diag(V) = 1"
"0","  X_org = as.matrix(mvrnorm(n, mu = rep(0, p), Sigma = V))"
"0","  true_b = c(runif(10, -1, 1), rep(0, p-10))"
"0","  y_org = X_org %*% true_b + rnorm(n)"
"0",""
"0","  # pre-scale and center X and y"
"0","  X = scale(X_org)*sqrt(n/(n-1))"
"0","  y = scale(y_org)*sqrt(n/(n-1))"
"0","  lambda = 0.3"
"0","  "
"0","  #Write myLasso function"
"0","   soft_th <- function(b, lambda){"
"0","  return(sign(b) * max(0, abs(b) - lambda))"
"0","          }"
"0","  myLasso <- function(X, y, lambda, tol = 1e-7, maxitr = 100){"
"0","  n = nrow(X)"
"0","  p = ncol(X)"
"0","  first_beta = rep(0, p)"
"0","  second_beta = first_beta"
"0",""
"0","  for (k in 1:maxitr){"
"0","  first_beta = second_beta"
"0","  r = y - X %*% first_beta"
"0",""
"0","  for (j in 1:p){"
"0","  r = r + X[, j] * second_beta[j]"
"0","  second_beta[j] <- soft_th( X[, j] %*% r / n, lambda)"
"0","  r = r - X[, j] * second_beta[j]          }"
"0","  if (sum((second_beta - first_beta)^2) < tol) break;"
"0","     }"
"0","   return(list(""N_iteration"" = k, ""Coef_beta"" = second_beta))"
"0","        }"
"0","  # fit myLasso model"
"0","  myfit = myLasso(X, y, lambda = 0.3)"
"0","  # Determine the number of iterations"
"0","  myfit$N_iteration"
"1","[1]"
"1"," 4"
"1","
"
"0","  # Find the parameter estimates"
"0","  myfit$Coef_beta[1:10]"
"1"," [1]"
"1","  0.000000000"
"1","  0.000000000"
"1","  0.000000000"
"1","  0.000000000"
"1","  0.116898197"
"1","  0.000000000"
"1","  0.000000000"
"1","  0.000000000"
"1","
"
"1"," [9]"
"1"," -0.003160251"
"1","  0.000000000"
"1","
"
"0","  "
